<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="from pandas import DataFrame%%00010import pandas as pd%%00010import numpy as np%%00010#import seaborn as sns%%00010#get_ipython().run_line_magic('matplotlib', 'inline')%%00010import matplotlib.pyplot as plt%%00010from mpl_toolkits.axes_grid1 import AxesGrid%%00010import warnings%%00010warnings.filterwarnings('ignore')%%00010%%00010df = pd.read_csv(&quot;/home/matteolab/kag_risk_factors_cervical_cancer.csv&quot;)%%00010%%00010df_nan = df.replace(&quot;?&quot;, np.nan)%%00010%%00010df1 = df_nan.convert_objects(convert_numeric=True)%%00010%%00010df1.isnull().sum()%%00010%%00010df1['First sexual intercourse'].fillna(df1['First sexual intercourse'].median(), inplace = True)%%00010df1['Num of pregnancies'].fillna(df1['Num of pregnancies'].median(), inplace = True)%%00010df1['First sexual intercourse'].fillna(df1['First sexual intercourse'].median(), inplace = True)%%00010df1['Smokes'].fillna(0,inplace = True)%%00010df1['Number of sexual partners'].fillna(df1['Number of sexual partners'].median(), inplace = True)%%00010%%00010l = (df1['Smokes']==1)%%00010df1.loc[l,'Smokes (years)'] = df1.loc[l,'Smokes (years)'].fillna(df1.loc[l,'Smokes (years)'].median())%%00010%%00010l = (df1['Smokes']==0)%%00010df1.loc[l,'Smokes (years)'] = df1.loc[l,'Smokes (years)'].fillna(0)%%00010%%00010l = (df1['Smokes']==1)%%00010df1.loc[l,'Smokes (packs/year)'] = df1.loc[l,'Smokes (packs/year)'].fillna(df1.loc[l,'Smokes (packs/year)'].median())%%00010%%00010l = (df1['Smokes']==0)%%00010df1.loc[l,'Smokes (packs/year)'] = df1.loc[l,'Smokes (packs/year)'].fillna(0)%%00010%%00010#df1['Hinselmann'] = df1['Hinselmann'].astype('str')%%00010#df1['Schiller'] = df1['Schiller'].astype('str')%%00010#df1['Citology'] = df1['Citology'].astype('str')%%00010#df1['Biopsy'] = df1['Biopsy'].astype('str')%%00010%%00010#df2 = df1.drop(['Hinselmann','Schiller','Citology','Biopsy'], axis = 1)%%00010df2=df1.copy()%%00010%%00010corrmat = df2.corr()%%00010k = 15 #number of variables for heatmap%%00010cols = corrmat.nlargest(k, 'Hormonal Contraceptives')['Hormonal Contraceptives'].index%%00010%%00010cols =cols.drop(['STDs: Time since first diagnosis','STDs: Time since last diagnosis'])%%00010%%00010cm = df2[cols].corr()%%00010%%00010plt.figure(figsize=(9,9))%%00010%%00010#sns.set(font_scale=1.25)%%00010#hm = sns.heatmap(cm, cbar=True, cmap='Set1' ,annot=True,vmin=0,vmax =1, square=True, fmt='.2f', annot_kws={'size': 10},%%00010#                 yticklabels = cols.values, xticklabels = cols.values)%%00010#plt.show()%%00010%%00010l = (df2['Age']&gt;df2['Age'].mean())%%00010df2.loc[l,'Hormonal Contraceptives'] = df2.loc[l,'Hormonal Contraceptives'].fillna(1)%%00010%%00010l = (df2['Num of pregnancies']&lt;df2['Num of pregnancies'].mean())%%00010df2.loc[l,'Hormonal Contraceptives'] = df2.loc[l,'Hormonal Contraceptives'].fillna(1)%%00010%%00010df2['Hormonal Contraceptives'].fillna(0,inplace = True)%%00010%%00010df2['Hormonal Contraceptives'].isnull().sum()%%00010%%00010l = (df2['Hormonal Contraceptives'] == 1)%%00010df2.loc[l,'Hormonal Contraceptives (years)'] = df2.loc[l,'Hormonal Contraceptives (years)'].fillna(df2['Hormonal Contraceptives (years)'].median())%%00010%%00010l = (df2['Hormonal Contraceptives'] == 0)%%00010df2.loc[l,'Hormonal Contraceptives (years)'] = df2.loc[l,'Hormonal Contraceptives (years)'].fillna(0)%%00010%%00010corrmat = df2.corr()%%00010k = 15 #number of variables for heatmap%%00010cols = corrmat.nlargest(k, 'IUD')['IUD'].index%%00010%%00010cols =cols.drop(['STDs: Time since first diagnosis','STDs: Time since last diagnosis'])%%00010%%00010cm = df2[cols].corr()%%00010%%00010plt.figure(figsize=(9,9))%%00010%%00010#sns.set(font_scale=1.25)%%00010#hm = sns.heatmap(cm,cmap = 'rainbow', cbar=True, annot=True,vmin=0,vmax =1, square=True, fmt='.2f', annot_kws={'size': 10},%%00010#                 yticklabels = cols.values, xticklabels = cols.values)%%00010#plt.show()%%00010%%00010len(df2[(df2['Age']&gt;df2['Age'].mean())&amp;(df2['IUD']==1)])%%00010%%00010len(df2[df2['IUD']==1])%%00010%%00010l = (df2['Age']&gt;df2['Age'].mean())%%00010df2.loc[l,'IUD'] = df2.loc[l,'IUD'].fillna(1)%%00010%%00010df2['IUD'].fillna(0, inplace = True)%%00010%%00010l = (df2['IUD'] == 1)%%00010df2.loc[l,'IUD (years)'] = df2.loc[l,'IUD (years)'].fillna(df2['IUD (years)'].median())%%00010%%00010l = (df2['IUD'] == 0)%%00010df2.loc[l,'IUD (years)'] = df2.loc[l,'IUD (years)'].fillna(0)%%00010%%00010len(df2[(df2['IUD'] == 1) &amp; (df2['IUD (years)'] == 0) ]) #questi li ho messi sbagliati e devo cambiarli%%00010%%00010l = (df2['IUD'] == 1) &amp; (df2['IUD (years)'] == 0)%%00010df2.loc[l,'IUD (years)'] = df2['IUD (years)'].mean()%%00010%%00010len(df2[(df2['IUD'] == 1) &amp; (df2['IUD (years)'] == 0) ])%%00010%%00010len(df2[(df2['IUD'] == 0) &amp; (df2['IUD (years)'] != 0) ])%%00010%%00010corrmat = df2.corr()%%00010k = 15 %%00010cols = corrmat.nlargest(k, 'STDs')['STDs'].index%%00010%%00010#cols =cols.drop(['STDs: Time since first diagnosis','STDs: Time since last diagnosis'])%%00010%%00010cm = df2[cols].corr()%%00010%%00010plt.figure(figsize=(9,9))%%00010%%00010#sns.set(font_scale=1.25)%%00010#hm = sns.heatmap(cm,cmap = 'hot', cbar=True, annot=True,vmin=0,vmax =1, square=True, fmt='.2f', annot_kws={'size': 10},%%00010 #                yticklabels = cols.values, xticklabels = cols.values)%%00010#plt.show()%%00010%%00010%%00010df3 = df2.copy()%%00010%%00010l = (df3['STDs:condylomatosis']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:cervical condylomatosis']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:vaginal condylomatosis']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:vulvo-perineal condylomatosis']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:syphilis']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:pelvic inflammatory disease']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:genital herpes']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:molluscum contagiosum']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:AIDS']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:HIV']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:Hepatitis B']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['STDs:HPV']==1)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010%%00010l = (df3['IUD']==0)%%00010df3.loc[l,'STDs'] = df3.loc[l,'STDs'].fillna(1)%%00010df3['STDs'].fillna(0, inplace = True)%%00010%%00010df3['STDs'].isnull().sum()%%00010%%00010df3['STDs (number)'].median()%%00010%%00010df3['STDs (number)'].mean()%%00010%%00010l = (df3['STDs']==1)%%00010df3.loc[l,'STDs (number)'] = df3.loc[l,'STDs (number)'].fillna(df3['STDs (number)'].mean())%%00010df3['STDs (number)'].fillna(0, inplace = True)%%00010%%00010df3['STDs (number)'].isnull().sum()%%00010%%00010corrmat = df3.corr()%%00010%%00010plt.figure(figsize=(20,20))%%00010%%00010#sns.set(font_scale=2)%%00010#hm = sns.heatmap(corrmat,cmap = 'tab20c', cbar=True, annot=True,vmin=0,vmax =1,center=True, square=True, fmt='.2f', annot_kws={'size': 10},%%00010#             yticklabels = df3.columns, xticklabels = df3.columns)%%00010#plt.show()%%00010%%00010df4= df3.copy()%%00010%%00010l = (df4['STDs']==0)%%00010df4.loc[l,'STDs:condylomatosis'] = df4.loc[l,'STDs:condylomatosis'].fillna(0)%%00010%%00010l = (df4['STDs']==0)%%00010df4.loc[l,'STDs:cervical condylomatosis'] = df4.loc[l,'STDs:cervical condylomatosis'].fillna(0)%%00010%%00010l = (df4['STDs']==0)%%00010df4.loc[l,'STDs:vaginal condylomatosis'] = df4.loc[l,'STDs:vaginal condylomatosis'].fillna(0)%%00010%%00010l = (df4['STDs']==0)%%00010df4.loc[l,'STDs:vulvo-perineal condylomatosis'] = df4.loc[l,'STDs:vulvo-perineal condylomatosis'].fillna(0)%%00010%%00010l = (df4['STDs']==0)%%00010df4.loc[l,'STDs:syphilis'] = df4.loc[l,'STDs:syphilis'].fillna(0)%%00010%%00010l = (df4['STDs']==0)%%00010df4.loc[l,'STDs:pelvic inflammatory disease'] = df4.loc[l,'STDs:pelvic inflammatory disease'].fillna(0)%%00010%%00010l = (df4['STDs']==0)%%00010df4.loc[l,'STDs:genital herpes'] = df4.loc[l,'STDs:genital herpes'].fillna(0)%%00010%%00010l = (df4['STDs']==0)%%00010df4.loc[l,'STDs:molluscum contagiosum'] = df4.loc[l,'STDs:molluscum contagiosum'].fillna(0)%%00010%%00010df4['STDs:molluscum contagiosum'].isnull().sum()%%00010%%00010df4['STDs:condylomatosis'].fillna(df4['STDs:condylomatosis'].median(),inplace = True)%%00010df4['STDs:cervical condylomatosis'].fillna(df4['STDs:cervical condylomatosis'].median(),inplace = True)%%00010df4['STDs:vaginal condylomatosis'].fillna(df4['STDs:vaginal condylomatosis'].median(),inplace = True)%%00010df4['STDs:vulvo-perineal condylomatosis'].fillna(df4['STDs:vulvo-perineal condylomatosis'].median(),inplace = True)%%00010df4['STDs:syphilis'].fillna(df4['STDs:syphilis'].median(),inplace = True)%%00010df4['STDs:pelvic inflammatory disease'].fillna(df4['STDs:pelvic inflammatory disease'].median(),inplace = True)%%00010df4['STDs:genital herpes'].fillna(df4['STDs:genital herpes'].median(),inplace = True)%%00010df4['STDs:molluscum contagiosum'].fillna(df4['STDs:molluscum contagiosum'].median(),inplace = True)%%00010%%00010df4['STDs:molluscum contagiosum'].isnull().sum()%%00010%%00010l = (df4['STDs']==0)%%00010df4.loc[l,'STDs:AIDS'] = df4.loc[l,'STDs:AIDS'].fillna(0)%%00010df4['STDs:AIDS'].fillna(df4['STDs:AIDS'].median(),inplace = True)%%00010%%00010df4['STDs:AIDS'].isnull().sum()%%00010%%00010len(df4[df4['STDs:HIV']==1])%%00010%%00010len(df4[(df4['STDs:HIV']==1) &amp; (df4['STDs']==1)])%%00010%%00010l = (df4['STDs']==1)%%00010df4.loc[l,'STDs:HIV'] = df4.loc[l,'STDs:HIV'].fillna(1)%%00010df4['STDs:HIV'].fillna(0,inplace = True)%%00010%%00010len(df4[(df4['STDs']==0) &amp; (df4['STDs:HIV'] == 1)])%%00010%%00010df4['STDs:HIV'].isnull().sum()%%00010%%00010len(df4[df4['STDs:Hepatitis B']==1])%%00010%%00010df4['STDs:Hepatitis B'].fillna(0, inplace = True)%%00010%%00010df4['STDs:Hepatitis B'].isnull().sum()%%00010%%00010df4['STDs:HPV'].fillna(0, inplace = True)%%00010%%00010df4['STDs:HPV'].isnull().sum()%%00010%%00010l = (df4['STDs']==1)%%00010df4.loc[l,'STDs: Time since first diagnosis'] = df4.loc[l,'STDs: Time since first diagnosis'].fillna(df4['STDs: Time since first diagnosis'].median())%%00010%%00010l = (df4['STDs']==1)%%00010df4.loc[l,'STDs: Time since last diagnosis'] = df4.loc[l,'STDs: Time since last diagnosis'].fillna(df4['STDs: Time since last diagnosis'].median())%%00010%%00010df4['STDs: Time since last diagnosis'].fillna(0, inplace = True)%%00010df4['STDs: Time since first diagnosis'].fillna(0, inplace = True)%%00010%%00010df4['STDs: Time since last diagnosis'].isnull().sum()%%00010%%00010df4.to_csv('dataset_cancer_no_miss.csv', sep=',')%%00010%%00010output_table = df4%%00010"/>
<entry key="rowLimit" type="xint" value="1000"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="Node 14"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="13"/>
<entry key="y-coordinate" type="xint" value="239"/>
<entry key="width" type="xint" value="134"/>
<entry key="height" type="xint" value="20"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="11"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="EXECUTED"/>
<entry key="factory" type="xstring" value="org.knime.python.nodes.source.PythonSourceNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Source"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME GmbH, Konstanz, Germany"/>
<entry key="node-bundle-version" type="xstring" value="3.3.0.v201608122003"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME GmbH, Konstanz, Germany"/>
<entry key="node-feature-version" type="xstring" value="3.3.0.v201611242050"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Source"/>
<entry key="hasContent" type="xboolean" value="true"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
<entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
<entry key="port_object_summary" type="xstring" value="Rows: 858, Cols: 36"/>
<entry key="port_dir_location" type="xstring" value="port_1"/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" value="f303d1e2-813e-4f69-b771-60d13be2c800"/>
</config>
</config>
